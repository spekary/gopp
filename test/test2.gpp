package test

import (
	"github.com/spekary/gopp"
)


class Thing extends gopp.Base {

	func WhoAmI() string {
		return this.Type() + ":" + this.Name()
	}

	func Type() string {
		return "Uknown"
	}

	func Name() string {
		return "No Name"
	}

}

class Person extends Thing {
	first string
	last string

	func Construct(first string, last string) {
		parent::Construct()
		this.first = first
		this.last = last
	}

	override func Type() string {
		return "Person"
	}

	override func Name() string {
		return this.first + " " + this.last
	}

	func ComplexReturn(data interface{}) (string, interface{}) {
		return this.first + " " + this.last, 1
	}

	func PointerReturn() *Thing {
		a := Thing{}
		return a
	}

}