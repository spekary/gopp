package main

import (
	"flag"
	"os"
	"fmt"
	"io/ioutil"
	"strings"
	"path/filepath"
)

func processFile(file string) {
	s,err := ioutil.ReadFile(file)

	if (err != nil) {
		fmt.Println(err)
		return
	}
	s = ProcessString(s)
	i := strings.LastIndex(file, ".")

	if (i < 0) {
		file = file + ".go"
	} else {
		file = file[:i] + ".go"
	}
	ioutil.WriteFile(file, s, os.ModePerm)
}

/**
Process a string that is gopp formatted code, and return the go code
 */
func ProcessString(input []byte) []byte {
	l := lex(string(input))

	tree := parse(l)
	s := tree.String()

	s = "/**\nThis file is code generated by gopp. Do not edit.\n*/\n\n" + s

	return []byte(s)
}


func main() {
	var all bool
	args := os.Args[1:]

	if (len(args) == 0) {
		fmt.Println("Usage: gopp [file ...] [-all]")
		fmt.Println("-all: process all .gpp files in the current directory")
	}

	flag.BoolVar(&all, "all", false, "a string var")


	flag.Parse()
	//var err error

	if all {
		// Process all files
		files, _ := filepath.Glob("*.gpp")
		if len(files) == 0 {
			fmt.Println("No .gpp files found in current directory.")
			return
		}
		for _, file := range files {
			processFile(file)
		}
	} else {
		for _, file := range args {
			processFile(file)
		}
	}
}


